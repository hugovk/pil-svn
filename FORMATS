
The Python Imaging Library
$Id: FORMATS,v 1.5 1996/10/04 19:41:25 fredrik Exp $

*** File formats supported by release 1.0rc1 ***

format	summary
--------------------------------------------------------------------
ARG	Reads the (highly experimental) ARG animation format. [1, 2]

BMP	Reads and writes 1, 4, 8 and 24-bit uncompressed images. RLE
        compressed files are not supported.

CUR	Reads 4 and 8-bit Windows cursor files.  If a file contains
	multiple cursors, the largest size is loaded.  Animated
	cursors are not supported.

DCX	Reads DCX files (compound PCX files).  See PCX for details.
	You can use seek/tell to load individual frames.

EPS	Identifies EPS images.  Writes "L", "RGB" and "CMYK" images.
	Output is an EPS file covering (0, 0, xsize, ysize) in the
	Postscript coordinate space.  Use scale/translate operators
	to put the image in place.  (For easy printing, use the PSDraw
	interface).

FLI	Reads Autodesk FLI and FLC animation files.

FPX	Reads FlashPix files.  Only the highest resolution layer is
	read, and the viewing transform is ignored. [1]

GBR	Reads GIMP brushes.

GD	Reads GD images through the "GdImageFile" module.  Note that
	this format cannot be automatically identified by Image.open(),
	so you have to use the GdImageFile.open() function instead.

GIF	Reads GIF87 and GIF89 images, and writes uncompressed GIF87
	images.  Animation files can be handled via the "seek/tell"
	methods.  To generate animation files, see the "gifmaker.py"
	sample script.

ICO	Reads 4 and 8-bit Windows icon files.  If a file contains
	multiple icons, the largest size is loaded.

IM	Reads and writes basic versions of the IFUNC/LabEye IM format.

IMT	Reads single-layer, 8-bit images of the Image Tools format.

IPTC	Reads some versions of the IPTC/ANPA Newsphoto format.  Tags
        are stored in the "info" attribute.  This driver is experimental.

JPEG	Reads and writes "L", "RGB", "CMYK" and "YCrCb" images.  Note
        that YCrCb files are automatically converted to RGB, unless you
	use the "draft" method.  This driver also supports progressive
        JPEG files. [1]

MCIDAS	Reads 8-bit McIdas area files.

MIC	Reads Microsoft Image Composer images.  You can use the seek
	method to access the individual sprites in the file.

MPEG	Identifies MPEG video streams.

MSP	Reads and writes MSP images.  Reads both version 1 and version
	2 files, but writes version 1 files only (uncompressed).

PCD	Reads PhotoCD (PCD) images.  PIL reads the base resolution
	only (768x512).

PCX	Reads and writes 1, 2, 4, 8, and 24-bit compressed images.
	Uncompressed PCX files are not supported.

PDF	Identifies and writes PDF images. [1]

PIXAR	Reads PIXAR raster files.  Only "RGB" images are supported in
	this version.  This driver is experimental.

PNG	Reads W3O PNG files of all possible flavours (except interlaced
	files in this version).  Writes "1", "P", "L", "I", "RGB", and
	"RGBA" images. [2]

PPM	Reads and writes "1" (PBM), "L" (PGM), and "RGB" (PPM) images.

PSD	Reads Adobe PSD files.  Both uncompressed and compressed
	(packbits) versions are supported.  Note that overlays and
	auxiliary layers are not read.

SGI	Reads uncompressed "L" and "RGB" images.

SUN	Reads uncompressed "1", "L" and "RGB" images.

TGA	Reads uncompressed 8, 16, 24 and 32-bit "P", "L", "RGB", and
	"RGBA" images.

TIFF	Reads and writes "1", "L", "RGB", "RGBA", and "CMYK" images.
	PIL reads the following TIFF flavours:
	- organization: striped, tiled, planar, packed
	- compression: none, jpeg [1], lzw, lzw+predictor, packbits
        The TIFF tag directory can be inspected through the "tag" member.
	Multi-image files can be handled though the "seek/tell" methods.
	PIL currently writes uncompressed, single strip images only.

WMF	Reads and renders a subset of the Windows metafile format.
	This driver is experimental.

XBM	Reads and writes XBM bitmaps.

XPM	Reads XPM pixmaps.

--------------------------------------------------------------------
Notes:

[1] When linked with the IJG JPEG library (version 6.0).

[2] When linked with the ZLIB library (version 1.0).  Note that
    LIBPNG is not required to read PNG files.
